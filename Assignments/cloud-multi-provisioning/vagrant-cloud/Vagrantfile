# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.hostname = 'vagrant-test'
  
  
  # config.vm.synced_folder ".", "/vagrant", type: "rsync"
  # config.vm.provider :digital_ocean do |provider, override|
  #   override.ssh.private_key_path = '~/.ssh/id_rsa'
  #   override.nfs.functional = false
  #   override.vm.box = 'digital_ocean'
  #   override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  #   override.vm.allowed_synced_folder_types = :rsync

  #   provider.token = ENV['DIGITALOCEAN-TOKEN']  # Remember to set the environment variable DIGITALOCEAN-TOKEN before running
  #   provider.image = 'ubuntu-18-04-x64'
  #   provider.region = 'nyc1'
  #   provider.size = 's-1vcpu-1gb'
  #   provider.setup = false
  #   provider.private_networking = false
	# 	provider.ipv6 = false
	# 	provider.monitoring = false
  # end

  # Using nodes to create appservice and dbserver

  nodes = [
        {
          :hostname => "dbserver", 
          :box => "bento/ubuntu-18.04"
        },
        {
          :hostname => "appserver", 
          :box => "bento/ubuntu-18.04"
        },
  ]

  # I used ruby loop to provide basic configuration.

  node.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.synced_folder ".", "/vagrant", type: "rsunc"

      # using nodeconfig i will configure the node to make digital ocaean as its provider
      nodeconfig.vm.provider :digital_ocean do |provider, override|
        override.ssh.private_key_path = '~/.ssh/id_rsa'
        override.vm.box = 'digital_ocean'
        override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
        override.nfs.functional = false
        override.vm.allowed_synced_folder_types = :rsync
        provider.token = ENV['DIGITALOCEAN-TOKEN']  # Remember to set the environment variable DIGITALOCEAN-TOKEN before running
        provider.image = 'ubuntu-18-04-x64'
        provider.region = 'nyc1'
        provider.size = 's-1vcpu-1gb'
        provider.setup = false
        provider.private_networking = false
        provider.ipv6 = false
        provider.monitoring = false
      end
      # to create local virtual machine
      nodeconfig.vm.provider :virtualbox do |v, override|
        override.vm.box = 'bento/ubuntu-18.04'
      end
    
      # puppet installation

      nodeconfig.vm.provision "shell", inline: <<-SHELL
      wget https://apt.puppetlabs.com/puppet5-release-$(lsb_release -cs).deb
      dpkg -i puppet5-release-$(lsb_release -cs).deb
      apt-get -qq update
      apt-get install -y puppet-agent
    SHELL

      nodeconfig.vm.box = "bento/ubuntu-18.04"
      nodeconfig.vm.hostname = node[:hostname]
      nodeconfig.vm.synced_folder ".", "/vagrant", type: "rsync"
    end
  end
  
  
  config.vm.provision :puppet do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file = "site.pp"
    puppet.module_path = "puppet/modules"
  end  
  
end
